Big-O Notation

1. int total = 0;
    for(int i=0; i<n; i++)
        for(int j=0; j<n; j++)
            total += i * j;

ANS: Time complexity is O(n), where n is the size of the input


2. int total = 0;
    for(int i=0; i<n; i++)
        for(int j=0; j<5; j++)
            total += i * j;
ANS: Time complexity is O(n^5), because the complexity of nested loops is
equal to the number of times the innermost loop is executed. Thus, the innermost
loop will run 5 times. 

3. int total = 0;
    for(int i=0; i<n; i++)
        for(int j=0; j<n; j++)
            for(int k=0; k<i*j; j++)
                total += k;

4. int total = 0;
    int j = 1;
        for(int i=0; i<n; i++) {
            j *= 2;
            for(int k=0; k<j; k++)
                total++;
 }

5. int total = 0;
    int d = 1;
        for(int i=0; i<n;) {
            if(d < 0) i++;
            total += d * i * i;
            d = -d;
 }

6. int total = 0;
    if(n < 0) n = -n;
        while(n > 0) {
        n /= 2;
        total++;
}